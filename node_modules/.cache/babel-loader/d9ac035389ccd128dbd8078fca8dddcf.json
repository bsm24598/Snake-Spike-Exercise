{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Snake-Spike/spike-exercise-snake-game/react-snake-START-HERE/src/App.js\";\nimport React from \"react\";\nimport { CANVAS_SIZE, SNAKE_START, APPLE_START, SCALE, SPEED, DIRECTIONS } from './constants';\nimport { useInterval } from './useInterval';\nimport { useRef, useState, useEffect } from \"react\";\n\nconst App = () => {\n  const canvasRef = useRef();\n  const [snake, setSnake] = useState(SNAKE_START);\n  const [apple, setApple] = useState(APPLE_START); //set direction\n\n  const [dir, setDir] = useState([0, -1]);\n  const [speed, setSpeed] = useState();\n  const [gameOver, setGameOver] = useState(false);\n\n  const startGame = () => {};\n\n  const endGame = () => {};\n\n  const moveSnake = () => {};\n\n  const createApple = () => {};\n\n  const checkCollision = () => {};\n\n  const checkAppleCollision = () => {};\n\n  const gameLoop = () => {}; //\n\n\n  useEffect(() => {\n    const context = canvasRef.current.getContext(\"2d\");\n    context.setTransform(SCALE, 0, 0, SCALE, 0, 0);\n    context.clearRect(0, 0, CANVAS_SIZE[0], CANVAS_SIZE[1]);\n    context.fillStyle = \"pink\";\n    snake.forEach(([x, y]) => context.fillRect(x, y, 1, 1));\n    context.fillStyle = \"lightblue\";\n    context.fillRect(apple[0], apple[1], 1, 1);\n  }, [snake, apple, gameOver]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    role: \"button\",\n    tabIndex: \"0\",\n    onKeyDown: e => moveSnake(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    style: {\n      border: \"1px solid black\"\n    },\n    ref: canvasRef,\n    width: `${CANVAS_SIZE[0]}px`,\n    height: `${CANVAS_SIZE[1]}px`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), gameOver && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 26\n    }\n  }, \"Game Over\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: startGame,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"Start Game\"));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/user/Desktop/Snake-Spike/spike-exercise-snake-game/react-snake-START-HERE/src/App.js"],"names":["React","CANVAS_SIZE","SNAKE_START","APPLE_START","SCALE","SPEED","DIRECTIONS","useInterval","useRef","useState","useEffect","App","canvasRef","snake","setSnake","apple","setApple","dir","setDir","speed","setSpeed","gameOver","setGameOver","startGame","endGame","moveSnake","createApple","checkCollision","checkAppleCollision","gameLoop","context","current","getContext","setTransform","clearRect","fillStyle","forEach","x","y","fillRect","e","border"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport {\n    CANVAS_SIZE,\n    SNAKE_START,\n    APPLE_START,\n    SCALE,\n    SPEED,\n    DIRECTIONS\n} from './constants';\n\nimport { useInterval } from './useInterval';\nimport { useRef, useState, useEffect } from \"react\";\n\nconst App = () => {\n    const canvasRef = useRef();\n    const [snake, setSnake] = useState(SNAKE_START);\n    const [apple, setApple] = useState(APPLE_START);\n    //set direction\n    const [dir, setDir] = useState([0, -1]);\n    const [ speed, setSpeed] = useState();\n    const [gameOver, setGameOver] = useState(false);\n\n    const startGame = () => {\n\n    }\n\n\n    const endGame = () => {\n\n    }\n\n    const moveSnake = () => {\n\n    }\n\n    const createApple = () => {\n\n    }\n\n\n    const checkCollision = () => {\n\n    }\n\n    const checkAppleCollision = () => {\n\n\n    }\n\n    const gameLoop = () => {\n\n    }\n\n\n    //\n    useEffect(() => {\n        const context = canvasRef.current.getContext(\"2d\");\n        context.setTransform(SCALE, 0, 0, SCALE, 0, 0);\n        context.clearRect(0, 0, CANVAS_SIZE[0], CANVAS_SIZE[1]);\n        context.fillStyle = \"pink\";\n        snake.forEach(([x, y]) => context.fillRect(x, y, 1, 1));\n        context.fillStyle = \"lightblue\";\n        context.fillRect(apple[0], apple[1], 1, 1);\n\n    }, [snake, apple, gameOver]);\n\n\n    return (\n        <div role=\"button\" tabIndex=\"0\" onKeyDown={e => moveSnake(e)}>\n            <canvas style={{ border: \"1px solid black\" }}\n                ref={canvasRef}\n                width={`${CANVAS_SIZE[0]}px`}\n                height={`${CANVAS_SIZE[1]}px`}\n                />\n            {gameOver && <div>Game Over</div>}\n            <button onClick={startGame}>Start Game</button>\n        </div>\n    )\n\n}\n  \nexport default App;\n"]},"metadata":{},"sourceType":"module"}